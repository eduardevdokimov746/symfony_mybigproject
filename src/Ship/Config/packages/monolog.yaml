monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/main.log'
                level: info
                channels: [ doctrine, request, mailer, router, security ]
                formatter: file_formatter

            main_only_debug_filter:
                type: filter
                accepted_levels: [ debug ]
                handler: main_debug
                channels: [ doctrine, request, mailer, router, security ]
                formatter: file_formatter

            main_debug:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/main_debug.log'
                formatter: file_formatter

            app:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/app.log'
                level: info
                channels: [ app ]
                formatter: file_formatter

            app_only_debug_filter:
                type: filter
                accepted_levels: [ debug ]
                handler: app_debug
                channels: [ app ]

            app_debug:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/app_debug.log'
                formatter: file_formatter

            debug_profiler:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/debug.log'
                level: debug
                channels: [ debug, profiler ]
                formatter: file_formatter

            other:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/other.log'
                level: debug
                channels: [ '!app', '!doctrine', '!request', '!mailer', '!router', '!event', '!debug', '!profiler', '!security' ]
                formatter: file_formatter

when@prod:
    monolog:
        handlers:
            main:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/main.log'
                level: info
                channels: [ doctrine, request, mailer, router, security ]
                formatter: file_formatter

            main_only_debug_filter:
                type: filter
                accepted_levels: [ debug ]
                handler: main_debug
                channels: [ doctrine, request, mailer, router, security ]
                formatter: file_formatter

            main_debug:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/main_debug.log'
                formatter: file_formatter

            app:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/app.log'
                level: info
                channels: [ app ]
                formatter: file_formatter

            app_only_debug_filter:
                type: filter
                accepted_levels: [ debug ]
                handler: app_debug
                channels: [ app ]

            app_debug:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/app_debug.log'
                formatter: file_formatter

            other:
                type: rotating_file
                path: '%kernel.logs_dir%/%kernel.environment%/{date}/other.log'
                level: debug
                channels: [ '!app', '!doctrine', '!request', '!mailer', '!router', '!security' ]
                formatter: file_formatter

            buffer_until_critical:
                type: fingers_crossed
                handler: deduplication_before_send
                action_level: critical

            deduplication_before_send:
                type: deduplication
                handler: send_to_telegram
                deduplication_level: critical

            send_to_telegram:
                type: telegram
                token: '%env(LOG_TELEGRAM_TOKEN)%'
                parse_mode: Markdown
                level: critical
                channel: '%env(LOG_TELEGRAM_CHANEL)%'
                formatter: App\Ship\ExceptionHandler\Formatter\TelegramFormatter